#+Title: Bootstrapping steps
#+Author: Systems Team
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil
* Introduction
  This document contains the steps to setup the whole
  OpenVZ cluster.
* Bootstrapping the cluster
  The following shell script does:
  1. Installs required packages.
  2. Generates ssh keys on the local host( host machine).
  3. Enables =StrictHostKeyChecking no=.
  4. Copies public key to =root@localhost= and
     =root@127.0.0.1=.
  5. Provides the steps to add host machine public on
     gitlab.com in systems-model repository.
  6. Sets up the base machine.
  7. Adds a ansible playbook in =/etc/rc.d/rc.local= file to
     setup entire cluster.

#+BEGIN_SRC shell :tangle ../../../bootstrap.sh

#!/usr/bin/env bash
# Path for common variables for cluster automation playbooks
COMMONVARS_PATH=build/code/imp/roles/common-vars/vars/main.yml
HOST_PATH=build/code/imp/hosts 

sed -i '/proxy=.*/d' /etc/yum.conf
#echo "proxy=$HTTP_PROXY" >> /etc/yum.conf
export http_proxy=$HTTP_PROXY
export https_proxy=$HTTPS_PROXY

## Install required packages
yum install epel-release -y
yum install ansible -y
yum install openssh-server -y
yum install sshpass -y

service sshd start
chkconfig sshd on

echo -e '\n\nPlease press "n" if keys are already generated'
ssh-keygen -t rsa -f /root/.ssh/id_rsa -q -P ""

sed -i '/^StrictHostKey.*/d' /etc/ssh/ssh_config
echo 'StrictHostKeyChecking no' >> /etc/ssh/ssh_config

service sshd restart

sshpass -p $PASSWORD_HOSTMACHINE ssh-copy-id root@localhost
sshpass -p $PASSWORD_HOSTMACHINE ssh-copy-id root@127.0.0.1

# # ## Have a copy of original file
cp $COMMONVARS_PATH $COMMONVARS_PATH.bkp


RC_LOCAL=/etc/rc.d/rc.local
### Add playbooks to $RC_LOCAL to run playbooks on boot
echo "cd ~/cluster-automation/build/code/imp/ > cd_logs.logs 2>&1" >> $RC_LOCAL
echo "ansible-playbook -i hosts cluster.yml > cluster_yml.logs 2>&1" >> $RC_LOCAL
echo 'sed -i "/ansible-playbook.*/d" '$RC_LOCAL'' >> $RC_LOCAL
echo 'sed -i "/cluster-automation.*/d" '$RC_LOCAL'' >> $RC_LOCAL
cat ~/.ssh/id_rsa.pub

echo -e "\n\n Steps to add above displayed host machine's public key in GitLab systems-model repository\n\n\n"
echo -e " 1. Copy host machine's public key.\n"
echo -e "       #+BEGIN_EXAMPLE\n"
echo -e "       cat ~/.ssh/id_rsa.pub\n"
echo -e "       #+END_EXAMPLE\n"
echo -e " 2. Got to  [[https://gitlab.com/vlead-systems/systems-model/settings/repository][systems-model repo on gitlab.com]]\n"
echo -e " 3. Navigate to =Deploy Keys= and click on =Expand= button.\n"
echo -e " 4. Give a Title in the =Title= text box\n"
echo -e " 5. Paste the copied public in =Key= text box \n"
echo -e " 6. Click on =Add Key= button to save.\n"

echo -e "\n\nPlease add above diplayed key in systems-model repository."
echo -e "\n\nPlease press Y or y to continue."
read -p "Have you added host machine's public key ( ~/.ssh/id_rsa.pub) in gitlab.com in systems-model repository(Y/y):: " -n 1 -r
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
 echo -e "\n\nYou Pressed wrong key please run make again and press correct key (y or Y)"
else
 cd ~/cluster-automation/build/code/imp/ && ansible-playbook -i hosts base-machine-setup.yml 
fi 
    
#+END_SRC
